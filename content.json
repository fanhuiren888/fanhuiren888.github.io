{"meta":{"title":"Fanhr","subtitle":null,"description":null,"author":"Fanhr","url":"https://fanhuiren888.github.io"},"pages":[{"title":"Tagscloud","date":"2018-04-16T12:41:23.000Z","updated":"2018-04-16T12:58:36.618Z","comments":true,"path":"tags/index.html","permalink":"https://fanhuiren888.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Linux_Centos6_新增硬盘分区，格式化,加载","slug":"Linux-Centos6-新增硬盘分区,格式化-加载","date":"2018-04-17T03:13:51.000Z","updated":"2018-04-17T03:22:20.786Z","comments":true,"path":"2018/04/17/Linux-Centos6-新增硬盘分区,格式化-加载/","link":"","permalink":"https://fanhuiren888.github.io/2018/04/17/Linux-Centos6-新增硬盘分区,格式化-加载/","excerpt":"","text":"此次操作是在VM虚拟机环境中进行： 首先需要添加一块硬盘–&gt;点击编辑虚拟机设置–&gt;点击弹框下面的添加–&gt;选择硬盘–&gt;点击下一步 选择SCSI类型–&gt;点击下一步 默认–&gt;下一步 选择下面的多文件–&gt;下一步 点击完成–&gt;确定–&gt;左边的虚拟机就会多一块20G的硬盘 然后虚拟机开机，在进行分区操作之前先简单介绍下磁盘分区工具fdisk，有几个常用的命令，例： fdisk + 新增磁盘：对指定的硬盘进行分区操作 fdisk -l :显示指定硬盘分区表信息 fdisk -d:删除一个硬盘分区 fdisk -n:创建一个分区 fdisk -p：列出硬盘分区表 fdisk -q：退出fdisk，不保存更改 fdisk -w:把设置写入硬盘分区表，然后退出。 介绍完命令我们开始操作，首先查看一下我们现在的分区情况 1234567891011121314151617181920212223242526272829303132[root@root ~]# df -hFilesystem Size Used Avail Use% Mounted on/dev/sda6 17G 3.2G 13G 20% /tmpfs 503M 72K 503M 1% /dev/shm/dev/sda1 504M 39M 440M 9% /boot/dev/sda2 5.8G 140M 5.4G 3% /home/dev/sda3 4.9G 222M 4.4G 5% /var[root@root ~]# fdisk -lDisk /dev/sda: 32.2 GB, 32212254720 bytes #第一块硬盘30G255 heads, 63 sectors/track, 3916 cylindersUnits = cylinders of 16065 * 512 = 8225280 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisk identifier: 0x0007c967 #具体的分区情况 Device Boot Start End Blocks Id System/dev/sda1 * 1 66 524288 83 LinuxPartition 1 does not end on cylinder boundary./dev/sda2 66 831 6144000 83 LinuxPartition 2 does not end on cylinder boundary./dev/sda3 831 1468 5120000 83 Linux/dev/sda4 1468 3917 19667968 5 Extended/dev/sda5 1468 1723 2048000 82 Linux swap / Solaris/dev/sda6 1723 3917 17617920 83 LinuxDisk /dev/sdb: 21.5 GB, 21474836480 bytes #这是新增的20G硬盘255 heads, 63 sectors/track, 2610 cylindersUnits = cylinders of 16065 * 512 = 8225280 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisk identifier: 0x00000000 现在进行分区，我这次练习分为1个主分区，4个逻辑分区，主分区大小为8G，逻辑分区大小分别为2G、3G、3G、2G 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112[root@root ~]# fdisk /dev/sdb #执行分区命令Device contains neither a valid DOS partition table, nor Sun, SGI or OSF disklabelBuilding a new DOS disklabel with disk identifier 0x543c4b70.Changes will remain in memory only, until you decide to write them.After that, of course, the previous content won&apos;t be recoverable.Warning: invalid flag 0x0000 of partition table 4 will be corrected by w(rite)WARNING: DOS-compatible mode is deprecated. It&apos;s strongly recommended to switch off the mode (command &apos;c&apos;) and change display units to sectors (command &apos;u&apos;).Command (m for help): n #N 新建分区Command action e extended p primary partition (1-4)p #P 主分区 E 扩展分区Partition number (1-4): 1 #分区号 输入1First cylinder (1-2610, default 1): #默认Using default value 1Last cylinder, +cylinders or +size&#123;K,M,G&#125; (1-2610, default 2610): +8G #sdb1 分8GCommand (m for help): w # W 保存The partition table has been altered!Calling ioctl() to re-read partition table.Syncing disks.[root@root ~]# fdisk -l # 我这里分完主分区先看看，毕竟操作不熟想保险一点，你们也可以做完主分区继续往下操作Disk /dev/sda: 32.2 GB, 32212254720 bytes255 heads, 63 sectors/track, 3916 cylindersUnits = cylinders of 16065 * 512 = 8225280 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisk identifier: 0x0007c967 Device Boot Start End Blocks Id System/dev/sda1 * 1 66 524288 83 LinuxPartition 1 does not end on cylinder boundary./dev/sda2 66 831 6144000 83 LinuxPartition 2 does not end on cylinder boundary./dev/sda3 831 1468 5120000 83 Linux/dev/sda4 1468 3917 19667968 5 Extended/dev/sda5 1468 1723 2048000 82 Linux swap / Solaris/dev/sda6 1723 3917 17617920 83 LinuxDisk /dev/sdb: 21.5 GB, 21474836480 bytes255 heads, 63 sectors/track, 2610 cylindersUnits = cylinders of 16065 * 512 = 8225280 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisk identifier: 0x543c4b70 Device Boot Start End Blocks Id System/dev/sdb1 1 1045 8393931 83 Linux[root@root ~]# fdisk /dev/sdb #继续操作，下面进行扩展分区WARNING: DOS-compatible mode is deprecated. It&apos;s strongly recommended to switch off the mode (command &apos;c&apos;) and change display units to sectors (command &apos;u&apos;).Command (m for help): n #新建Command action e extended p primary partition (1-4)e #扩展分区Partition number (1-4): 2 #分区号 2 First cylinder (1046-2610, default 1046): Using default value 1046Last cylinder, +cylinders or +size&#123;K,M,G&#125; (1046-2610, default 2610): #这里扩展分区的容量什么都不写，默认所有Using default value 2610Command (m for help): n #新建Command action l logical (5 or over) p primary partition (1-4)l #L 逻辑分区First cylinder (1046-2610, default 1046): Using default value 1046Last cylinder, +cylinders or +size&#123;K,M,G&#125; (1046-2610, default 2610): +2G #2GCommand (m for help): n #新建Command action l logical (5 or over) p primary partition (1-4)l #L 逻辑分区First cylinder (1308-2610, default 1308): Using default value 1308Last cylinder, +cylinders or +size&#123;K,M,G&#125; (1308-2610, default 2610): +3G #3GCommand (m for help): n #新建Command action l logical (5 or over) p primary partition (1-4)l #L 逻辑分区First cylinder (1701-2610, default 1701): Using default value 1701Last cylinder, +cylinders or +size&#123;K,M,G&#125; (1701-2610, default 2610): +3G #3GCommand (m for help): n #新建Command action l logical (5 or over) p primary partition (1-4)l #L 逻辑分区First cylinder (2094-2610, default 2094): Using default value 2094Last cylinder, +cylinders or +size&#123;K,M,G&#125; (2094-2610, default 2610): +2G #2G Command (m for help): w #W 保存The partition table has been altered!Calling ioctl() to re-read partition table.Syncing disks. 到这里所有分区就完了，再看一眼分区 123456789101112131415161718192021222324252627282930313233[root@root ~]# fdisk -lDisk /dev/sda: 32.2 GB, 32212254720 bytes255 heads, 63 sectors/track, 3916 cylindersUnits = cylinders of 16065 * 512 = 8225280 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisk identifier: 0x0007c967 Device Boot Start End Blocks Id System/dev/sda1 * 1 66 524288 83 LinuxPartition 1 does not end on cylinder boundary./dev/sda2 66 831 6144000 83 LinuxPartition 2 does not end on cylinder boundary./dev/sda3 831 1468 5120000 83 Linux/dev/sda4 1468 3917 19667968 5 Extended/dev/sda5 1468 1723 2048000 82 Linux swap / Solaris/dev/sda6 1723 3917 17617920 83 LinuxDisk /dev/sdb: 21.5 GB, 21474836480 bytes255 heads, 63 sectors/track, 2610 cylindersUnits = cylinders of 16065 * 512 = 8225280 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisk identifier: 0x543c4b70 Device Boot Start End Blocks Id System/dev/sdb1 1 1045 8393931 83 Linux/dev/sdb2 1046 2610 12570862+ 5 Extended/dev/sdb5 1046 1307 2104483+ 83 Linux/dev/sdb6 1308 1700 3156741 83 Linux/dev/sdb7 1701 2093 3156741 83 Linux/dev/sdb8 2094 2355 2104483+ 83 Linux 下面进行格式化操作 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124[root@root ~]# mkfs.ext4 /dev/sdb1 #以EXT4分区格式 格式化sdb1 mke2fs 1.41.12 (17-May-2010)文件系统标签=操作系统:Linux块大小=4096 (log=2)分块大小=4096 (log=2)Stride=0 blocks, Stripe width=0 blocks525200 inodes, 2098482 blocks104924 blocks (5.00%) reserved for the super user第一个数据块=0Maximum filesystem blocks=215167795265 block groups32768 blocks per group, 32768 fragments per group8080 inodes per groupSuperblock backups stored on blocks: 32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632正在写入inode表: 完成 Creating journal (32768 blocks): 完成Writing superblocks and filesystem accounting information: 完成This filesystem will be automatically checked every 37 mounts or180 days, whichever comes first. Use tune2fs -c or -i to override.[root@root ~]# mkfs.ext4 /dev/sdb2mke2fs 1.41.12 (17-May-2010)mkfs.ext4: inode_size (128) * inodes_count (0) too big for a filesystem with 0 blocks, specify higher inode_ratio (-i) or lower inode count (-N).[root@root ~]# mkfs.ext4 /dev/sdb5 #以EXT4分区格式 格式化sdb5mke2fs 1.41.12 (17-May-2010)文件系统标签=操作系统:Linux块大小=4096 (log=2)分块大小=4096 (log=2)Stride=0 blocks, Stripe width=0 blocks131648 inodes, 526120 blocks26306 blocks (5.00%) reserved for the super user第一个数据块=0Maximum filesystem blocks=54106521617 block groups32768 blocks per group, 32768 fragments per group7744 inodes per groupSuperblock backups stored on blocks: 32768, 98304, 163840, 229376, 294912正在写入inode表: 完成 Creating journal (16384 blocks): 完成Writing superblocks and filesystem accounting information: 完成This filesystem will be automatically checked every 39 mounts or180 days, whichever comes first. Use tune2fs -c or -i to override.[root@root ~]# mkfs.ext4 /dev/sdb6 #以EXT4分区格式 格式化sdb6mke2fs 1.41.12 (17-May-2010)文件系统标签=操作系统:Linux块大小=4096 (log=2)分块大小=4096 (log=2)Stride=0 blocks, Stripe width=0 blocks197600 inodes, 789185 blocks39459 blocks (5.00%) reserved for the super user第一个数据块=0Maximum filesystem blocks=80950067225 block groups32768 blocks per group, 32768 fragments per group7904 inodes per groupSuperblock backups stored on blocks: 32768, 98304, 163840, 229376, 294912正在写入inode表: 完成 Creating journal (16384 blocks): 完成Writing superblocks and filesystem accounting information: 完成This filesystem will be automatically checked every 23 mounts or180 days, whichever comes first. Use tune2fs -c or -i to override.[root@root ~]# mkfs.ext4 /dev/sdb7 #以EXT4分区格式 格式化sdb7mke2fs 1.41.12 (17-May-2010)文件系统标签=操作系统:Linux块大小=4096 (log=2)分块大小=4096 (log=2)Stride=0 blocks, Stripe width=0 blocks197600 inodes, 789185 blocks39459 blocks (5.00%) reserved for the super user第一个数据块=0Maximum filesystem blocks=80950067225 block groups32768 blocks per group, 32768 fragments per group7904 inodes per groupSuperblock backups stored on blocks: 32768, 98304, 163840, 229376, 294912正在写入inode表: 完成 Creating journal (16384 blocks): 完成Writing superblocks and filesystem accounting information: 完成This filesystem will be automatically checked every 34 mounts or180 days, whichever comes first. Use tune2fs -c or -i to override.[root@root ~]# mkfs.ext4 /dev/sdb8 #以EXT4分区格式 格式化sdb8mke2fs 1.41.12 (17-May-2010)文件系统标签=操作系统:Linux块大小=4096 (log=2)分块大小=4096 (log=2)Stride=0 blocks, Stripe width=0 blocks131648 inodes, 526120 blocks26306 blocks (5.00%) reserved for the super user第一个数据块=0Maximum filesystem blocks=54106521617 block groups32768 blocks per group, 32768 fragments per group7744 inodes per groupSuperblock backups stored on blocks: 32768, 98304, 163840, 229376, 294912正在写入inode表: 完成 Creating journal (16384 blocks): 完成Writing superblocks and filesystem accounting information: 完成This filesystem will be automatically checked every 38 mounts or180 days, whichever comes first. Use tune2fs -c or -i to override. 下面进行挂载操作，先创建挂载点，再挂载 123456[root@root ~]# mkdir /tmp/sdb&#123;1,5,6,7,8&#125; #创建5个区的挂载点；分别挂载[root@root ~]# mount /dev/sdb1 /tmp/sdb1 [root@root ~]# mount /dev/sdb5 /tmp/sdb5[root@root ~]# mount /dev/sdb6 /tmp/sdb6[root@root ~]# mount /dev/sdb7 /tmp/sdb7[root@root ~]# mount /dev/sdb8 /tmp/sdb8 再次查看分区 123456789101112131415161718192021222324252627282930313233343536373839404142434445[root@root ~]# fdisk -lDisk /dev/sda: 32.2 GB, 32212254720 bytes255 heads, 63 sectors/track, 3916 cylindersUnits = cylinders of 16065 * 512 = 8225280 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisk identifier: 0x0007c967 Device Boot Start End Blocks Id System/dev/sda1 * 1 66 524288 83 LinuxPartition 1 does not end on cylinder boundary./dev/sda2 66 831 6144000 83 LinuxPartition 2 does not end on cylinder boundary./dev/sda3 831 1468 5120000 83 Linux/dev/sda4 1468 3917 19667968 5 Extended/dev/sda5 1468 1723 2048000 82 Linux swap / Solaris/dev/sda6 1723 3917 17617920 83 LinuxDisk /dev/sdb: 21.5 GB, 21474836480 bytes255 heads, 63 sectors/track, 2610 cylindersUnits = cylinders of 16065 * 512 = 8225280 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisk identifier: 0x543c4b70 Device Boot Start End Blocks Id System/dev/sdb1 1 1045 8393931 83 Linux/dev/sdb2 1046 2610 12570862+ 5 Extended/dev/sdb5 1046 1307 2104483+ 83 Linux/dev/sdb6 1308 1700 3156741 83 Linux/dev/sdb7 1701 2093 3156741 83 Linux/dev/sdb8 2094 2355 2104483+ 83 Linux[root@root ~]# df -hFilesystem Size Used Avail Use% Mounted on/dev/sda6 17G 3.2G 13G 20% /tmpfs 503M 72K 503M 1% /dev/shm/dev/sda1 504M 39M 440M 9% /boot/dev/sda2 5.8G 140M 5.4G 3% /home/dev/sda3 4.9G 222M 4.4G 5% /var/dev/sdb1 7.9G 147M 7.4G 2% /tmp/sdb1/dev/sdb5 2.0G 68M 1.9G 4% /tmp/sdb5/dev/sdb6 3.0G 69M 2.8G 3% /tmp/sdb6/dev/sdb7 3.0G 69M 2.8G 3% /tmp/sdb7/dev/sdb8 2.0G 68M 1.9G 4% /tmp/sdb8","categories":[],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://fanhuiren888.github.io/tags/Linux/"}]},{"title":"Git + Hexo 博客搭建","slug":"Git-Hexo-博客搭建","date":"2018-02-27T01:53:22.000Z","updated":"2018-04-10T12:47:39.376Z","comments":true,"path":"2018/02/27/Git-Hexo-博客搭建/","link":"","permalink":"https://fanhuiren888.github.io/2018/02/27/Git-Hexo-博客搭建/","excerpt":"","text":"1.注册github 2.安装git 3.安装node.js 4.打开git bash 安装 hexo 123456789$ npm install -g hexo$ cd D:/Hexo$ hexo init$ hexo g$ hexo s 然后到浏览器输入 localhost:4000 就可以看到效果了。","categories":[],"tags":[{"name":"git","slug":"git","permalink":"https://fanhuiren888.github.io/tags/git/"}]}]}